{"version":3,"sources":["features/Project.js","projects.js","App.js","reportWebVitals.js","index.js"],"names":["Project","project","textStyle","color","preferred_text_color","class","src","background_image","alt","title","style","repo_url","href","description","projects","technologies","App","age","Date","getFullYear","useState","infoText","handleScroll","elementId","target","innerText","toLowerCase","split","join","positionTop","document","getElementById","getBoundingClientRect","top","window","scrollY","viewportHeight","visualViewport","height","console","log","scrollTo","TxtRotate","el","this","txt","tick","prototype","substring","length","innerHTML","that","delta","Math","random","setTimeout","useEffect","typewriterElement","getElementsByClassName","rtTxt","header","querySelector","addEventListener","revealText","removeEventListener","className","onClick","id","display","fontSize","width","marginTop","map","navigator","clipboard","writeText","then","classList","add","remove","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c059a480.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Project.css'\r\nconst Project = ({project}) => {\r\n\r\n    const textStyle = {\r\n        color: project.preferred_text_color ? project.preferred_text_color : 'white'\r\n    }\r\n    \r\n    return (\r\n        <div class=\"project\">\r\n            <div class=\"project-image\">\r\n               <img src={project.background_image ? project.background_image : './project-default.jpg'}  alt={project.title}/>\r\n            </div>\r\n            <div style={textStyle} class=\"title\">\r\n            {project.repo_url\r\n            ? <a href={project.repo_url}>{project.title}</a>\r\n            : project.title}\r\n            </div>\r\n            <div style={textStyle} class=\"description\">{\r\n            project.description + (project.repo_url ? \" (click title to go repo)\" : \"\")\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Project","const projects = [\r\n    {\r\n        title: \"Linear Regression\",\r\n        description: \"While I learn Articial Neural Networks, wanted to create my own \\\"library like\\\" linear regression class to have a better understanding of how the algorithms work.\",\r\n        repo_url: \"https://github.com/fudaylcavus/regression_solutions\"\r\n    },\r\n    { \r\n        title: \"Apartment Management\", \r\n        background_image: 'apartment.jpg',\r\n        description: \"Made Full-Stack Application to keep track of incomes and expenses of an apartment in a maintainable, user friendly UI\",\r\n        technologies: [\"html\",\"css\",\"ejs\",\"postgresql\",\"expressjs\"],\r\n        preferred_text_color: 'white'\r\n    },\r\n    { \r\n        title: \"Reddit Client\", \r\n        background_image: 'reddit-client.jpg',\r\n        preferred_text_color: 'white',\r\n        description: \"Made Full-Stack Application to keep track of incomes and expenses of an apartment in a maintainable, user friendly UI\" ,\r\n        technologies: [\"react\",\"redux\"],\r\n        repo_url: 'https://github.com/fudaylcavus/Reddit-Client'\r\n    },\r\n    {\r\n        title: \"Discord Selfbot\",\r\n        background_image: \"wall-e.jpg\",\r\n        description: \"One of my oldest programs, it was adding a new functionalities to discord, some of them for fun and utility\",\r\n        preferred_text_color: 'white',\r\n        repo_url: 'https://github.com/fudaylcavus/Discord-Selfbot'\r\n    },\r\n    {\r\n        title: \"Jammming\",\r\n        description: \"Search and preview music then create your playlist, which you can add instantly to your Spotify account.\",\r\n        preferred_text_color: \"white\",\r\n        repo_url: \"https://github.com/fudaylcavus/Jammming\",\r\n        background_image: \"spotify.jpg\"\r\n    },\r\n    {\r\n        title: \"Product Scraper\",\r\n        description: \"Get Product information with just a given Etsy link, save it to the db, and then list them for later use and get detail without looking to etsy again.\",\r\n        repo_url: \"https://github.com/fudaylcavus/webscrape-demo\"\r\n    },\r\n    {\r\n        title: \"And more..\",\r\n        description: \"I like programming and trying something new, even if it's an easy task to do without computational power. Why not to make it easier? Check my github profile for more :)\",\r\n        repo_url: \"https://github.com/fudaylcavus\",\r\n        background_image: \"explore.jpg\"\r\n    }\r\n]\r\n\r\nexport default projects;","import './App.css';\nimport { useEffect, useState } from 'react';\nimport Project from './features/Project';\nimport projects from './projects';\n\nfunction App() {\n\n  const age = new Date().getFullYear() - 2002\n\n  const [infoText, setInfoText] = useState(`\n    I'm Fudayl Cavus, ${age} years-old <strong>Computer Engineering Student</strong>. \n    I started coding with web programming and now I'm Junior Full-Stack Engineer.\n    As a student, I wan't to explore this field as much as I can, especially to ML. \n    If you have question, idea or project, all contact platforms on the bottom :) Waiting for your message!`)\n\n  const handleScroll = ({ target }) => {\n    let elementId = target.innerText.toLowerCase().split(\" \").join(\"\") //About Me => aboutme\n    const element = document.getElementById(elementId)\n    let positionTop = element.getBoundingClientRect().top + window.scrollY\n    let viewportHeight = window.visualViewport.height\n    console.log(positionTop)\n    window.scrollTo(0, positionTop - (8 / 100 * viewportHeight) - 80)\n  }\n\n  var TxtRotate = function (el) {\n    this.el = el;\n    this.txt = '';\n    this.tick();\n  };\n\n  const copyToClipboard = ({ target }) => {\n    navigator.clipboard.writeText(\"Fudayl Cavus#1011\").then(function () {\n      target.classList.add('copied');\n      setTimeout(() => {\n        target.classList.remove('copied')\n      }, 1000);\n    }, function () {\n      console.error('Problem on writing text to the clipboard!')\n    });\n  }\n\n  TxtRotate.prototype.tick = function () {\n    this.txt = infoText.substring(0, this.txt.length + 1);\n    this.el.innerHTML = '<span class=\"wrap\">' + this.txt + '</span>';\n    var that = this;\n    var delta = 60 - Math.random() * 50;\n    if (this.txt !== infoText) {\n      setTimeout(function () {\n        that.tick();\n      }, delta);\n    }\n  };\n\n  useEffect(() => {\n    var typewriterElement = document.getElementsByClassName('txt-rotate')[0];\n    const rtTxt = new TxtRotate(typewriterElement);\n    var header = document.querySelector('header');\n    const revealText = () => {\n      rtTxt.txt = infoText;\n      header.removeEventListener('click', revealText);\n    }\n    header.addEventListener('click', revealText)\n\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <h1>Fudayl Cavus</h1>\n        <div>\n          <span onClick={handleScroll}>About Me</span>\n          <span onClick={handleScroll}>Projects</span>\n        </div>\n      </nav>\n      <header id=\"aboutme\">\n        <div class=\"header-text\">\n          <h2>Hello! <p style={{ display: \"inline\", fontSize: \"0.8rem\" }}>(click to reveal)</p></h2>\n          <p class=\"typewriter\"><span class=\"txt-rotate\"></span></p>\n        </div>\n        <img src=\"memoji_cropped.png\" alt=\"computer memoji\" />\n      </header>\n      <main>\n        <div class=\"skills-container\">\n          <div class=\"title\">Skills</div>\n          <div class=\"skills\">\n            <div class=\"skill\">\n              <h4 class=\"title\">Full-Stack Engineer</h4>\n              <p>To learn according to certain curriculum, I started and finished full-stack carrer path of <a href=\"http://www.codecademy.com\">codecademy</a></p>\n              <p>Things learned:</p>\n              <ul>\n                <li>HTML</li>\n                <li>CSS</li>\n                <li>JS</li>\n                <li>React</li>\n                <li>Redux</li>\n                <li>Node.js</li>\n                <li>Express</li>\n                <li>SQL</li>\n                <li>Postgres</li>\n                <li>TDD</li>\n                <li>Web Security</li>\n                <li>Data Structures</li>\n              </ul>\n            </div>\n            <div class=\"skill\">\n              <h4 class=\"title\">Other</h4>\n              <p>All other stuff that I learned time by time without specific source:</p>\n              <ul>\n                <li>Python</li>\n                <li>sklearn</li>\n                <li>pandas</li>\n                <li>matplotlib</li>\n                <li>Java</li>\n                <li>RegExp</li>\n                <li>TypeScript</li>\n                <li>Git</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <hr style={{ width: \"80%\", marginTop: \"3rem\" }} />\n        <h2 id=\"projects\">\n          Projects\n        </h2>\n        <div class=\"project-list\">\n          {projects.map(project => <Project project={project} />)}\n        </div>\n        <hr style={{ width: \"80%\", marginTop: \"3rem\" }} />\n      </main>\n      <footer>\n        <a class=\"social-icons\" href=\"https://www.linkedin.com/in/fudaylcavus/\" aria-label=\"linked-in\"><i class=\"fab fa-linkedin-in\"></i></a>\n        <button class=\"social-icons\" onClick={copyToClipboard}><i class=\"fab fa-discord\"></i></button>\n        <a class=\"social-icons\" href=\"https://1drv.ms/w/s!Ap90-bHyQDyi22W5KlGGnVtgdasT?e=lQao6h\"><i class=\"fas fa-file\"></i></a>\n        <a class=\"social-icons\" href=\"mailto:fudaylc@gmail.com\"><i class=\"fas fa-envelope\"></i></a>\n        <a class=\"social-icons\" href=\"https://www.github.com/fudaylcavus\"><i class=\"fab fa-github\"></i></a>\n      </footer>\n    </div>\n  )\n}\n\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}